[1mdiff --git a/automation/migrations/0015_remove_business_destination_category_ls_id_and_more.py b/automation/migrations/0015_remove_business_destination_category_ls_id_and_more.py[m
[1mnew file mode 100644[m
[1mindex 00000000..562adfeb[m
[1m--- /dev/null[m
[1m+++ b/automation/migrations/0015_remove_business_destination_category_ls_id_and_more.py[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32m# Generated by Django 5.1.1 on 2024-12-10 08:17[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('automation', '0014_alter_level_options_remove_business_destination_and_more'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.RemoveField([m
[32m+[m[32m            model_name='business',[m
[32m+[m[32m            name='destination',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AddField([m
[32m+[m[32m            model_name='category',[m
[32m+[m[32m            name='ls_id',[m
[32m+[m[32m            field=models.IntegerField(default=0),[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AddField([m
[32m+[m[32m            model_name='level',[m
[32m+[m[32m            name='ls_id',[m
[32m+[m[32m            field=models.IntegerField(default=0),[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/automation/models.py b/automation/models.py[m
[1mindex 63dda1ae..276fd08d 100644[m
[1m--- a/automation/models.py[m
[1m+++ b/automation/models.py[m
[36m@@ -132,6 +132,7 @@[m [mclass Level(models.Model):[m
         choices=SITE_TYPES_CHOICES,[m
         default='PLACE'[m
     )[m
[32m+[m[32m    ls_id = models.IntegerField(default=0)[m
 [m
     def __str__(self):[m
         return f"{self.title} - {self.site_types}"[m
[36m@@ -150,7 +151,8 @@[m [mclass Category(models.Model):[m
     value = models.CharField(max_length=50, unique=True)[m
     level = models.ForeignKey(Level, on_delete=models.CASCADE)  # Link to Level[m
     parent = models.ForeignKey('self', null=True, blank=True, related_name='subcategories', on_delete=models.CASCADE)  [m
[31m-[m
[32m+[m[32m    ls_id = models.IntegerField(default=0)[m
[32m+[m[41m    [m
     def __str__(self):[m
         return self.title[m
 [m
[1mdiff --git a/automation/views.py b/automation/views.py[m
[1mindex 18581fa0..441cc16a 100644[m
[1m--- a/automation/views.py[m
[1m+++ b/automation/views.py[m
[36m@@ -124,7 +124,7 @@[m [mclass UploadFileView(View):[m
                 'country_name': task.country_name,[m
                 'destination_id': task.destination.id if task.destination else None,[m
                 'destination_name': task.destination_name,[m
[31m-                'level': task.level.id if task.level else None,[m
[32m+[m[32m                'level': task.level.title if task.level else None,[m
                 'main_category': task.main_category.title if task.main_category else '',[m
                 'subcategory': task.subcategory.title if task.subcategory else '',[m
             }[m
[36m@@ -797,7 +797,7 @@[m [mdef change_business_status(request, business_id):[m
 @csrf_exempt[m
 def update_business_status(request, business_id):[m
     try:[m
[31m-        business = get_object_or_404(Business, id=business_id)[m
[32m+[m[32m        business = get_object_or_404(Business.objects.select_related('task'), id=business_id)[m
         data = json.loads(request.body)[m
         new_status = data.get('status', '').strip()[m
         user_id = data.get('userId')[m
[36m@@ -842,8 +842,16 @@[m [mdef update_business_status(request, business_id):[m
 [m
                 # Fetch image details[m
                 image_urls = list([m
[31m-                    Image.objects.filter(business=business_id).all().values_list('image_url', flat=True)[m
[32m+[m[32m                    Image.objects.filter([m
[32m+[m[32m                        business=business_id, is_approved=True[m
[32m+[m[32m                    ).all().values_list('image_url', flat=True)[m
                 )[m
[32m+[m[41m                [m
[32m+[m[32m                # Set local secret level, category, subcategory ids[m
[32m+[m[32m                task_obj = business.task[m
[32m+[m[32m                business_data["level_id"] = task_obj.level.ls_id[m
[32m+[m[32m                business_data["category_id"] = task_obj.main_category.ls_id[m
[32m+[m[32m                business_data["sub_category_id"] = task_obj.subcategory.ls_id if task_obj.subcategory else None[m
 [m
                 result_data = {[m
                     **business_data,[m
[36m@@ -852,7 +860,7 @@[m [mdef update_business_status(request, business_id):[m
                     'images_urls': image_urls[m
                 }[m
 [m
[31m-                # Convert business data to JSON[m
[32m+[m[32m                # Convert business data to JSON[m[41m [m
                 app_data = json.dumps([m
                     result_data, default=datetime_serializer)[m
                 [m
